#!/usr/bin/perl
# Tutorial 1 - Q2
#
# Russel Balagon

use strict;
use warnings;

main(@ARGV);

sub main
{
    
    print("---------- Tute 1.2 ---------- \n\n");
    
    my ($firstMonday, $calculated_day_of_week, $date_from_user) = (0, 0, 0);
    my $warning_message = "date might not be valid in the current month";
    
    # Used for determining day of week associated with the number 1 - 7.
    my $dayOfWeek = [ qw( Monday Tuesday Wednesday Thursday Friday Saturday Sunday) ];
    
    
    # If no command line arguments have been passed, hard coded value will be used.
    if(!@ARGV)
    {
        ($firstMonday, $calculated_day_of_week) = day_of_date($date_from_user = 15);
        
    }
    else
    {
        ($firstMonday, $calculated_day_of_week) = day_of_date($date_from_user = $ARGV[0]);
    }
        

    print("Date of first Monday: $firstMonday \n\n");
    
    # Prints a warning message with the output if date is > 29
    if($date_from_user > 29)
    {
       print("Calculated Day of Week for [$date_from_user]($warning_message) ". 
            "day of month: @$dayOfWeek[$calculated_day_of_week] \n"); 
    }
    else
    {
        print("Calculated Day of Week for [$date_from_user] ". 
            "day of month: @$dayOfWeek[$calculated_day_of_week] \n");
    }   
    
}

sub day_of_date
{
    # returns the subroutine if no arguments passed
    return if(!@_);
    
    # script ends with error if date is greater than 31
    die("Date cannot be greater than 31\n") if($_[0] > 31);          
    
    my $date_from_user = $_[0];     # assigns the value of passed argument to a variable
    my $date_Of_first_monday = 0;
    
    # Generates a number between 1 and 7. Loop until generated number is > 1
    ($date_Of_first_monday = int(rand(7))) until($date_Of_first_monday > 1);
    
    # Calculates the day of week
    my $calculated_day_of_week = ($date_from_user - $date_Of_first_monday) % 7;
      
    # returns an array with the ramdomly generated date of first monday and the
    # calculated day of the week.
    return my @result = ($date_Of_first_monday, $calculated_day_of_week);
    
}
